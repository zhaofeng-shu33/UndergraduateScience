上机作业
(a)编绎并运行GaussElimation.cpp，可生成一个含有对阶数为2~20的Hilbert矩阵的求解结果，由结果不难发现，对较小的阶数，得到的解
（1，1...1)是完全精确的，但从order=9开始，解
（1，1，1，1，0.99999，1.00002，0.999977，
 1.00001，0.999997）就有所偏离。由误差公式||δx/x||（取2范数)可算出此时的误差为1.50*10^(-5)
是非常小的量，但到了阶数为20的时候，某些分量上
与1有着很大的偏离，得到完全没有意义的解。
编绎并运行CholeskyDecompositionToSolveLinearEquationSystem.cpp，可生成一个含有对阶数为2~13的Hilbert矩阵的求解结果。会发现程序无法计算阶数大于等于14的情况，这可能是由于在Cholesky算法中计算L矩阵对角元要开平方而被开方数由于计算机的舍入误差小于0所致。因此我在原代码中设置了若出现sqrt(a)中a<0的情况，调用exit(0)函数终止程序的命令。
和Gauss Elimation 相比，此法也从order=9开始出现误差，（1, 1, 0.999999, 1, 0.999985, 1.00003, 0.999964, 1.00002, 0.999995），两种情况下误差开始的矩阵阶数相同，可能说明两种方法在降低误差上没有明显的区别。
(b)运行 计算Hilbert矩阵的条件数.nb
可对阶数为2~20的Hilbert 矩阵求出条件数，可以看出从阶为6开始，（6:1.49511*10^7）条件数已经超过10^7，如此之大的条件数会使对有含较大的阶的Hilbert 矩阵的线性方程组的解存在较大误差。
(c)打开“吉洪诺夫正则化方法求解Hilbert Matrix.nb”,按照取正则化参数α（程序里的
para函数的返回值）为比A（Hilbert Matrix）绝对值最小奇异值μn大一个量级的方法，然后求解（αI+A(t)A)x=A(t)b得到近似解，从“..nb"可以看出，在n=20时按照这种方法得到的解十分接近（1，..1)，因此这种方法是对原方程很好的近似。
(d)在“用SOR方法迭代求解Hilbert Matrix的方程组.nb”文件中，对Hilbert Matrix 阶数n=3的情形用SOR迭代方法求解，发现即使控制真实解与迭代i步的解在无穷范数的意义下小于0.1,仍需i=29步才能达到精度范围内，造成迭代收敛（因为Hilbert Matrix is positive definite 且取的w=1.7在0~2范围内，由课本P85 定理3.2知SOR迭代法对Hilbert Matrix 收敛）速度如此之慢和Hilbert Matrix 谱半径接近1有关，故对不同0~2之间的w求出谱半径,并作图表示（见SOR.nb文件）可发现谱半径均接近1，根据课本P78页关于收敛速度的讨论可知用迭代法收敛速度非常慢。我又对n=5的情形作了尝试，此时对0~2之间的w，谱半径与1相差不到0.0005,这种情况下再用SOR求解，需要485次（对w=1.8)才达到精度为0.1（无穷范数）的范围内。因此对于谱半径十分接近1的Hilbert Matrix,不适合用SOR迭代法求解。
若使用共轭梯度法求解，打开（“用SOR方法迭代求解Hilbert Matrix的方程组.nb”并设置Hilbert矩阵阶数n，然后运行）可能是Mathematica 内部精度的设定，因此用此法(包括c小问，计算过程近于无舍入误差）在有限步内(小于等于n)总得到精确解，不过在运行时间上（如n=20)预处理的GC法要比一般的GC法更快（也许是降低了条件数的缘故）。